# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Publish Release

on:
  push:
    branches: [master]

jobs:
  setup:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.BOT_TOKEN }}
          fetch-depth: 0
          ref: 'master'
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: |
          echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-14-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-14-yarn-
      - run: yarn install --immutable
      - run: yarn constraints
      - run: yarn lint
      - run: yarn test
      - run: yarn test:integration

  version-check:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.BOT_TOKEN }}
          fetch-depth: 0
          ref: 'master'
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: |
          echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-14-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-14-yarn-
      - run: yarn install --immutable
      - run: yarn version check
      - run: yarn check:versions

  release:
    needs: [setup, version-check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.BOT_TOKEN }}
          fetch-depth: 0
          ref: 'master'
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: |
          echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-14-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-14-yarn-
      - run: yarn install --immutable
      - name: Release
        # FIXME: independent releases don't seem to be working with the --since flag
        run: |
          yarn config set npmAuthToken "${{ secrets.NPM_TOKEN }}"
          git config --global user.email ${{ secrets.GH_EMAIL }}
          git config --global user.name ${{ secrets.GH_USER }}
          git status
          git log -n 10 --oneline --all
          yarn version apply --all
          git status
          yarn workspaces foreach -ipv --no-private --since=origin/master run generateChangelog
          git status
          git log -n 10 --oneline --all
          git add packages/*/CHANGELOG.md packages/*/package.json .yarn/versions/*
          git commit -m "chore: publish release [skip ci]"
          git log -n 10 --oneline --all
          yarn workspaces foreach -ipv --no-private --since=origin/master run generateTag
          yarn workspaces foreach -ipv --no-private --since=origin/master npm publish --tolerate-republish --access public
          git push && git push --tags

      - run: yarn build:docs
      - name: Deploy docs
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: docusaurus/build
          commit_message: deployed docs [skip ci]
          committer: ${{ secrets.GH_USER }} ${{ secrets.GH_EMAIL }}
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
