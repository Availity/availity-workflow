// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`webpack configs sets up the default config with default settings 1`] = `
Object {
  "context": "/Users/bnewman/repositories/availity-workflow/project/app",
  "devtool": "source-map",
  "entry": Object {
    "index": Array [
      "/Users/bnewman/repositories/availity-workflow/node_modules/react-app-polyfill/stable.js",
      "/Users/bnewman/repositories/availity-workflow/node_modules/navigator.sendbeacon/dist/navigator.sendbeacon.cjs.js",
      "/Users/bnewman/repositories/availity-workflow/project/app/index.js",
    ],
  },
  "experiments": Object {},
  "infrastructureLogging": Object {
    "level": "warn",
  },
  "mode": "development",
  "module": Object {
    "rules": Array [
      Object {
        "test": /\\[/\\\\\\\\\\]node_modules\\[/\\\\\\\\\\]vfile\\[/\\\\\\\\\\]core\\\\\\.js/,
        "use": Array [
          Object {
            "loader": "imports-loader",
            "options": Object {
              "imports": Array [
                "single process/browser process",
              ],
              "type": "commonjs",
            },
          },
        ],
      },
      Object {
        "include": Array [
          "/Users/bnewman/repositories/availity-workflow/project/app",
          /node_modules\\[/\\\\\\\\\\]\\(\\?=\\(@av\\)\\)\\.\\*/,
        ],
        "test": /\\\\\\.\\(js\\|mjs\\|jsx\\|ts\\|tsx\\)\\$/,
        "use": Array [
          Object {
            "loader": "babel-loader",
            "options": Object {
              "babelrc": false,
              "cacheCompression": false,
              "cacheDirectory": false,
              "plugins": Array [
                "/Users/bnewman/repositories/availity-workflow/node_modules/react-refresh/babel.js",
              ],
              "presets": Array [
                [Function],
              ],
            },
          },
        ],
      },
      Object {
        "resolve": Object {
          "fullySpecified": false,
        },
        "test": /\\\\\\.m\\?js/,
      },
      Object {
        "test": /\\\\\\.css\\$/,
        "use": Array [
          "style-loader",
          Object {
            "loader": "css-loader",
            "options": Object {
              "importLoaders": 1,
              "sourceMap": true,
            },
          },
          Object {
            "loader": "postcss-loader",
            "options": Object {
              "postcssOptions": Object {
                "plugins": Array [
                  Object {
                    "Rule": [Function],
                    "postcssPlugin": "postcss-focus",
                  },
                  Object {
                    "Once": [Function],
                    "postcssPlugin": "postcss-flexbugs-fixes",
                  },
                  Object {
                    "plugins": Array [
                      Object {
                        "Declaration": [Function],
                        "postcssPlugin": "postcss-unset-value",
                      },
                      Object {
                        "postcssPlugin": "postcss-custom-properties",
                        "prepare": [Function],
                      },
                      Object {
                        "AtRule": Object {
                          "custom-media": [Function],
                          "media": [Function],
                        },
                        "postcssPlugin": "postcss-media-minmax",
                      },
                      Object {
                        "Declaration": [Function],
                        "postcssPlugin": "postcss-initial",
                      },
                      Object {
                        "Declaration": [Function],
                        "postcssPlugin": "postcss-page-break",
                      },
                      Object {
                        "Once": [Function],
                        "postcssPlugin": "postcss-font-variant",
                      },
                      Object {
                        "Declaration": [Function],
                        "postcssPlugin": "postcss-gap-properties",
                      },
                      Object {
                        "browsers": undefined,
                        "info": [Function],
                        "options": Object {
                          "flexbox": "no-2009",
                          "overrideBrowserslist": undefined,
                        },
                        "postcssPlugin": "autoprefixer",
                        "prepare": [Function],
                      },
                      Object {
                        "RuleExit": [Function],
                        "postcssPlugin": "postcss-progressive-custom-properties",
                      },
                      Object {
                        "OnceExit": [Function],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                    "postcssPlugin": "postcss-preset-env",
                  },
                  Object {
                    "OnceExit": [Function],
                    "postcssPlugin": "postcss-reporter",
                  },
                ],
              },
              "sourceMap": true,
            },
          },
        ],
      },
      Object {
        "test": /\\\\\\.\\(scss\\|sass\\)\\$/,
        "use": Array [
          "style-loader",
          Object {
            "loader": "css-loader",
            "options": Object {
              "sourceMap": true,
            },
          },
          Object {
            "loader": "postcss-loader",
            "options": Object {
              "postcssOptions": Object {
                "plugins": Array [
                  Object {
                    "Rule": [Function],
                    "postcssPlugin": "postcss-focus",
                  },
                  Object {
                    "Once": [Function],
                    "postcssPlugin": "postcss-flexbugs-fixes",
                  },
                  Object {
                    "plugins": Array [
                      Object {
                        "Declaration": [Function],
                        "postcssPlugin": "postcss-unset-value",
                      },
                      Object {
                        "postcssPlugin": "postcss-custom-properties",
                        "prepare": [Function],
                      },
                      Object {
                        "AtRule": Object {
                          "custom-media": [Function],
                          "media": [Function],
                        },
                        "postcssPlugin": "postcss-media-minmax",
                      },
                      Object {
                        "Declaration": [Function],
                        "postcssPlugin": "postcss-initial",
                      },
                      Object {
                        "Declaration": [Function],
                        "postcssPlugin": "postcss-page-break",
                      },
                      Object {
                        "Once": [Function],
                        "postcssPlugin": "postcss-font-variant",
                      },
                      Object {
                        "Declaration": [Function],
                        "postcssPlugin": "postcss-gap-properties",
                      },
                      Object {
                        "browsers": undefined,
                        "info": [Function],
                        "options": Object {
                          "flexbox": "no-2009",
                          "overrideBrowserslist": undefined,
                        },
                        "postcssPlugin": "autoprefixer",
                        "prepare": [Function],
                      },
                      Object {
                        "RuleExit": [Function],
                        "postcssPlugin": "postcss-progressive-custom-properties",
                      },
                      Object {
                        "OnceExit": [Function],
                        "postcssPlugin": "postcss-preset-env",
                      },
                    ],
                    "postcssPlugin": "postcss-preset-env",
                  },
                  Object {
                    "OnceExit": [Function],
                    "postcssPlugin": "postcss-reporter",
                  },
                ],
              },
              "sourceMap": true,
            },
          },
          Object {
            "loader": "sass-loader",
            "options": Object {
              "sourceMap": true,
            },
          },
        ],
      },
      Object {
        "generator": Object {
          "filename": "fonts/[name].[ext]",
        },
        "test": /font\\\\\\.\\(woff\\|woff2\\|eot\\|ttf\\|otf\\|svg\\)\\$/i,
        "type": "asset/resource",
      },
      Object {
        "test": /\\\\\\.\\(jpe\\?g\\|png\\|gif\\|svg\\)\\$/i,
        "use": Array [
          "url-loader?name=images/[name].[ext]&limit=10000",
        ],
      },
    ],
  },
  "output": Object {
    "chunkFilename": "[name].chunk.js",
    "filename": "[name].js",
    "path": "/Users/bnewman/repositories/availity-workflow/build",
  },
  "plugins": Array [
    DefinePlugin {
      "definitions": Object {
        "__DEV__": false,
        "__PROD__": false,
        "__STAGING__": false,
        "__TEST__": true,
        "process.env.NODE_ENV": "\\"test\\"",
      },
    },
    BannerPlugin {
      "banner": [Function],
      "options": Object {
        "banner": "APP_VERSION=\\"N/A\\";",
        "entryOnly": true,
        "raw": true,
        "test": /\\\\\\.\\(js\\|mjs\\|jsx\\|ts\\|tsx\\)\\$/,
      },
    },
    BannerPlugin {
      "banner": [Function],
      "options": Object {
        "banner": "vN/A - 2023-03-28T16:07:07.909Z",
      },
    },
    HtmlWebpackPlugin {
      "userOptions": Object {
        "favicon": "../../packages/workflow/public/favicon.ico",
        "template": "../../packages/workflow/public/index.html",
        "title": "Availity",
      },
      "version": 5,
    },
    IgnorePlugin {
      "checkIgnore": [Function],
      "options": Object {
        "contextRegExp": /moment\\$/,
        "resourceRegExp": /\\^\\\\\\.\\\\/locale\\$/,
      },
    },
    CaseSensitivePathsPlugin {
      "fsOperations": 0,
      "logger": NullConsole {
        "Console": [Function],
        "_counters": Object {},
        "_formatBuffer": [Function],
        "_groupDepth": 0,
        "_stderr": Socket {
          "_destroy": [Function],
          "_events": Object {
            "end": [Function],
          },
          "_eventsCount": 1,
          "_hadError": false,
          "_host": null,
          "_isStdio": true,
          "_maxListeners": undefined,
          "_parent": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "_readableState": ReadableState {
            "autoDestroy": false,
            "awaitDrainWriters": null,
            "buffer": BufferList {
              "head": null,
              "length": 0,
              "tail": null,
            },
            "closeEmitted": false,
            "closed": false,
            "dataEmitted": false,
            "decoder": null,
            "defaultEncoding": "utf8",
            "destroyed": false,
            "emitClose": false,
            "emittedReadable": false,
            "encoding": null,
            "endEmitted": false,
            "ended": false,
            "errorEmitted": false,
            "errored": null,
            "flowing": null,
            "highWaterMark": 16384,
            "length": 0,
            "multiAwaitDrain": false,
            "needReadable": false,
            "objectMode": false,
            "pipes": Array [],
            "readable": false,
            "readableListening": false,
            "reading": false,
            "readingMore": false,
            "resumeScheduled": false,
            "sync": true,
            Symbol(kPaused): null,
          },
          "_server": null,
          "_sockname": null,
          "_type": "pipe",
          "_writableState": WritableState {
            "afterWriteTickInfo": null,
            "allBuffers": true,
            "allNoop": true,
            "autoDestroy": false,
            "bufferProcessing": false,
            "buffered": Array [],
            "bufferedIndex": 0,
            "closeEmitted": false,
            "closed": false,
            "corked": 0,
            "decodeStrings": false,
            "defaultEncoding": "utf8",
            "destroyed": false,
            "emitClose": false,
            "ended": false,
            "ending": false,
            "errorEmitted": false,
            "errored": null,
            "finalCalled": false,
            "finished": false,
            "highWaterMark": 16384,
            "length": 0,
            "needDrain": false,
            "objectMode": false,
            "onwrite": [Function],
            "pendingcb": 0,
            "prefinished": false,
            "sync": true,
            "writecb": null,
            "writelen": 0,
            "writing": false,
          },
          "allowHalfOpen": false,
          "connecting": false,
          "destroySoon": [Function],
          "fd": 1,
          "server": null,
          Symbol(async_id_symbol): 9,
          Symbol(kHandle): Pipe {
            Symbol(owner_symbol): [Circular],
          },
          Symbol(kSetNoDelay): false,
          Symbol(lastWriteQueueSize): 0,
          Symbol(timeout): null,
          Symbol(kBuffer): null,
          Symbol(kBufferCb): null,
          Symbol(kBufferGen): null,
          Symbol(kCapture): false,
          Symbol(kBytesRead): 0,
          Symbol(kBytesWritten): 0,
        },
        "_stdout": Socket {
          "_destroy": [Function],
          "_events": Object {
            "end": [Function],
          },
          "_eventsCount": 1,
          "_hadError": false,
          "_host": null,
          "_isStdio": true,
          "_maxListeners": undefined,
          "_parent": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "_readableState": ReadableState {
            "autoDestroy": false,
            "awaitDrainWriters": null,
            "buffer": BufferList {
              "head": null,
              "length": 0,
              "tail": null,
            },
            "closeEmitted": false,
            "closed": false,
            "dataEmitted": false,
            "decoder": null,
            "defaultEncoding": "utf8",
            "destroyed": false,
            "emitClose": false,
            "emittedReadable": false,
            "encoding": null,
            "endEmitted": false,
            "ended": false,
            "errorEmitted": false,
            "errored": null,
            "flowing": null,
            "highWaterMark": 16384,
            "length": 0,
            "multiAwaitDrain": false,
            "needReadable": false,
            "objectMode": false,
            "pipes": Array [],
            "readable": false,
            "readableListening": false,
            "reading": false,
            "readingMore": false,
            "resumeScheduled": false,
            "sync": true,
            Symbol(kPaused): null,
          },
          "_server": null,
          "_sockname": null,
          "_type": "pipe",
          "_writableState": WritableState {
            "afterWriteTickInfo": null,
            "allBuffers": true,
            "allNoop": true,
            "autoDestroy": false,
            "bufferProcessing": false,
            "buffered": Array [],
            "bufferedIndex": 0,
            "closeEmitted": false,
            "closed": false,
            "corked": 0,
            "decodeStrings": false,
            "defaultEncoding": "utf8",
            "destroyed": false,
            "emitClose": false,
            "ended": false,
            "ending": false,
            "errorEmitted": false,
            "errored": null,
            "finalCalled": false,
            "finished": false,
            "highWaterMark": 16384,
            "length": 0,
            "needDrain": false,
            "objectMode": false,
            "onwrite": [Function],
            "pendingcb": 0,
            "prefinished": false,
            "sync": true,
            "writecb": null,
            "writelen": 0,
            "writing": false,
          },
          "allowHalfOpen": false,
          "connecting": false,
          "destroySoon": [Function],
          "fd": 1,
          "server": null,
          Symbol(async_id_symbol): 9,
          Symbol(kHandle): Pipe {
            Symbol(owner_symbol): [Circular],
          },
          Symbol(kSetNoDelay): false,
          Symbol(lastWriteQueueSize): 0,
          Symbol(timeout): null,
          Symbol(kBuffer): null,
          Symbol(kBufferCb): null,
          Symbol(kBufferGen): null,
          Symbol(kCapture): false,
          Symbol(kBytesRead): 0,
          Symbol(kBytesWritten): 0,
        },
        "_timers": Object {},
        "assert": [Function],
        "clear": [Function],
        "count": [Function],
        "countReset": [Function],
        "debug": [Function],
        "dir": [Function],
        "dirxml": [Function],
        "error": [Function],
        "group": [Function],
        "groupCollapsed": [Function],
        "groupEnd": [Function],
        "info": [Function],
        "log": [Function],
        "table": [Function],
        "time": [Function],
        "timeEnd": [Function],
        "timeLog": [Function],
        "trace": [Function],
        "warn": [Function],
      },
      "options": Object {},
      "pathCache": Map {},
      "primed": false,
    },
    DuplicatePackageCheckerPlugin {
      "options": Object {
        "emitError": false,
        "exclude": [Function],
        "showHelp": true,
        "strict": true,
        "verbose": true,
      },
    },
    ESLintWebpackPlugin {
      "key": "ESLintWebpackPlugin",
      "options": Object {
        "baseConfig": Object {
          "extends": "availity/workflow",
        },
        "cache": true,
        "cacheLocation": "/Users/bnewman/repositories/availity-workflow/node_modules/.cache/.eslintcache",
        "emitError": true,
        "emitWarning": true,
        "extensions": Array [
          "js",
          "jsx",
          "ts",
          "tsx",
          "mjs",
        ],
        "failOnError": true,
        "quiet": false,
        "resourceQueryExclude": Array [],
      },
      "run": [Function],
    },
    ReactRefreshPlugin {
      "options": Object {
        "exclude": /node_modules/i,
        "include": /\\\\\\.\\(\\[cm\\]js\\|\\[jt\\]sx\\?\\|flow\\)\\$/i,
        "overlay": Object {
          "entry": "/Users/bnewman/repositories/availity-workflow/node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ErrorOverlayEntry.js",
          "module": "/Users/bnewman/repositories/availity-workflow/node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js",
          "sockIntegration": "wds",
        },
      },
    },
    WebpackNotifierPlugin {
      "isFirstBuild": true,
      "lastBuildSucceeded": false,
      "options": Object {
        "contentImage": "/Users/bnewman/repositories/availity-workflow/packages/workflow/public/availity.png",
        "excludeWarnings": true,
      },
    },
  ],
  "resolve": Object {
    "extensions": Array [
      ".js",
      ".jsx",
      ".ts",
      ".tsx",
      ".json",
      ".css",
      "scss",
    ],
    "fallback": Object {
      "path": "/Users/bnewman/repositories/availity-workflow/node_modules/path-browserify/index.js",
    },
    "modules": Array [
      "/Users/bnewman/repositories/availity-workflow/project/app",
      "node_modules",
      "/Users/bnewman/repositories/availity-workflow/node_modules",
      "/Users/bnewman/repositories/availity-workflow/packages/workflow/node_modules",
    ],
    "symlinks": true,
  },
  "resolveLoader": Object {
    "modules": Array [
      "/Users/bnewman/repositories/availity-workflow/node_modules",
      "/Users/bnewman/repositories/availity-workflow/packages/workflow/node_modules",
    ],
    "symlinks": true,
  },
  "stats": "minimal",
  "target": "browserslist: last 1 chrome version, last 1 firefox version, last 1 safari version",
}
`;

exports[`webpack configs sets up the production config with default settings 1`] = `
Object {
  "context": "/Users/bnewman/repositories/availity-workflow/project/app",
  "devtool": "source-map",
  "entry": Object {
    "index": Array [
      "/Users/bnewman/repositories/availity-workflow/node_modules/react-app-polyfill/stable.js",
      "/Users/bnewman/repositories/availity-workflow/node_modules/navigator.sendbeacon/dist/navigator.sendbeacon.cjs.js",
      "/Users/bnewman/repositories/availity-workflow/project/app/index.js",
    ],
  },
  "experiments": Object {},
  "infrastructureLogging": Object {
    "level": "warn",
  },
  "mode": "production",
  "module": Object {
    "rules": Array [
      Object {
        "oneOf": Array [
          Object {
            "test": /\\[/\\\\\\\\\\]node_modules\\[/\\\\\\\\\\]vfile\\[/\\\\\\\\\\]core\\\\\\.js/,
            "use": Array [
              Object {
                "loader": "imports-loader",
                "options": Object {
                  "imports": Array [
                    "single process/browser process",
                  ],
                  "type": "commonjs",
                },
              },
            ],
          },
          Object {
            "include": Array [
              "/Users/bnewman/repositories/availity-workflow/project/app",
              /node_modules\\[/\\\\\\\\\\]\\(\\?=\\(@av\\)\\)\\.\\*/,
            ],
            "test": /\\\\\\.\\(js\\|mjs\\|jsx\\|ts\\|tsx\\)\\$/,
            "use": Array [
              Object {
                "loader": "babel-loader",
                "options": Object {
                  "babelrc": false,
                  "cacheCompression": false,
                  "cacheDirectory": true,
                  "presets": Array [
                    [Function],
                  ],
                },
              },
            ],
          },
          Object {
            "exclude": Array [
              "/Users/bnewman/repositories/availity-workflow/project/app",
              /node_modules\\[/\\\\\\\\\\]\\(\\?=\\(@av\\)\\)\\.\\*/,
              /@babel\\(\\?:\\\\/\\|\\\\\\\\\\{1,2\\}\\)runtime/,
            ],
            "loader": "babel-loader",
            "options": Object {
              "babelrc": false,
              "cacheCompression": false,
              "cacheDirectory": true,
              "compact": false,
              "configFile": false,
              "presets": Array [
                Array [
                  "/Users/bnewman/repositories/availity-workflow/node_modules/babel-preset-react-app/dependencies.js",
                  Object {
                    "helpers": true,
                  },
                ],
              ],
            },
            "test": /\\\\\\.\\(js\\|mjs\\)\\$/,
          },
          Object {
            "resolve": Object {
              "fullySpecified": false,
            },
            "test": /\\\\\\.m\\?js/,
          },
          Object {
            "test": /\\\\\\.css\\$/,
            "use": Array [
              Object {
                "loader": "/Users/bnewman/repositories/availity-workflow/node_modules/mini-css-extract-plugin/dist/loader.js",
                "options": Object {
                  "publicPath": "auto",
                },
              },
              Object {
                "loader": "css-loader",
                "options": Object {
                  "importLoaders": 1,
                  "sourceMap": true,
                },
              },
              Object {
                "loader": "postcss-loader",
                "options": Object {
                  "postcssOptions": Object {
                    "plugins": Array [
                      Object {
                        "Rule": [Function],
                        "postcssPlugin": "postcss-focus",
                      },
                      Object {
                        "Once": [Function],
                        "postcssPlugin": "postcss-flexbugs-fixes",
                      },
                      Object {
                        "plugins": Array [
                          Object {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          Object {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          Object {
                            "AtRule": Object {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          Object {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          Object {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          Object {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          Object {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          Object {
                            "browsers": undefined,
                            "info": [Function],
                            "options": Object {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": undefined,
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          Object {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          Object {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                      Object {
                        "OnceExit": [Function],
                        "postcssPlugin": "postcss-reporter",
                      },
                    ],
                  },
                  "sourceMap": true,
                },
              },
            ],
          },
          Object {
            "test": /\\\\\\.\\(scss\\|sass\\)\\$/,
            "use": Array [
              Object {
                "loader": "/Users/bnewman/repositories/availity-workflow/node_modules/mini-css-extract-plugin/dist/loader.js",
                "options": Object {
                  "publicPath": "auto",
                },
              },
              "css-loader",
              Object {
                "loader": "postcss-loader",
                "options": Object {
                  "postcssOptions": Object {
                    "plugins": Array [
                      Object {
                        "Rule": [Function],
                        "postcssPlugin": "postcss-focus",
                      },
                      Object {
                        "Once": [Function],
                        "postcssPlugin": "postcss-flexbugs-fixes",
                      },
                      Object {
                        "plugins": Array [
                          Object {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          Object {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          Object {
                            "AtRule": Object {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          Object {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          Object {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          Object {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          Object {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          Object {
                            "browsers": undefined,
                            "info": [Function],
                            "options": Object {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": undefined,
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          Object {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          Object {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                      Object {
                        "OnceExit": [Function],
                        "postcssPlugin": "postcss-reporter",
                      },
                    ],
                  },
                  "sourceMap": true,
                },
              },
              Object {
                "loader": "sass-loader",
                "options": Object {
                  "sourceMap": true,
                },
              },
            ],
          },
          Object {
            "generator": Object {
              "filename": "fonts/[name].[ext]",
            },
            "test": /font\\\\\\.\\(woff\\|woff2\\|eot\\|ttf\\|otf\\|svg\\)\\$/i,
            "type": "asset/resource",
          },
          Object {
            "test": /\\\\\\.\\(jpe\\?g\\|png\\|gif\\|svg\\)\\$/i,
            "use": Array [
              "url-loader?name=images/[name].[ext]&limit=10000",
            ],
          },
          Object {
            "exclude": Array [
              /\\\\\\.\\(js\\|mjs\\|jsx\\|ts\\|tsx\\)\\$/,
              /\\\\\\.html\\$/,
              /\\\\\\.json\\$/,
            ],
            "loader": "/Users/bnewman/repositories/availity-workflow/node_modules/file-loader/dist/cjs.js",
            "options": Object {
              "name": "static/media/[name].[contenthash:8].[ext]",
            },
          },
        ],
      },
    ],
  },
  "optimization": Object {
    "minimizer": Array [],
    "moduleIds": "deterministic",
    "runtimeChunk": "single",
    "splitChunks": Object {
      "cacheGroups": Object {
        "default": Object {
          "minChunks": 2,
          "priority": -20,
          "reuseExistingChunk": true,
        },
        "defaultVendors": Object {
          "chunks": "all",
          "idHint": "defaultVendors",
          "priority": -10,
          "test": /\\[/\\\\\\\\\\]node_modules\\[/\\\\\\\\\\]/,
        },
        "lodash": Object {
          "chunks": "all",
          "idHint": "vendors",
          "priority": 1,
          "test": /\\[/\\\\\\\\\\]node_modules\\[/\\\\\\\\\\]\\(lodash\\(\\[\\.-\\]\\)\\?\\\\w\\*\\?\\)\\[/\\\\\\\\\\]/,
        },
        "moment": Object {
          "chunks": "all",
          "idHint": "vendors",
          "priority": 2,
          "test": /\\[/\\\\\\\\\\]node_modules\\[/\\\\\\\\\\]\\(moment\\)\\[/\\\\\\\\\\]/,
        },
        "react": Object {
          "chunks": "all",
          "idHint": "vendors",
          "priority": 10,
          "test": /\\[/\\\\\\\\\\]node_modules\\[/\\\\\\\\\\]\\(react\\|react-dom\\)\\[/\\\\\\\\\\]/,
        },
        "styles": Object {
          "chunks": "all",
          "enforce": true,
          "idHint": "styles",
          "test": /\\\\\\.css\\$/,
        },
      },
    },
  },
  "output": Object {
    "chunkFilename": "[name].chunk.js",
    "devtoolModuleFilenameTemplate": [Function],
    "filename": "[name].js",
    "path": "/Users/bnewman/repositories/availity-workflow/build",
  },
  "plugins": Array [
    DefinePlugin {
      "definitions": Object {
        "__DEV__": false,
        "__PROD__": false,
        "__STAGING__": false,
        "__TEST__": true,
        "process.env.NODE_ENV": "\\"test\\"",
      },
    },
    BannerPlugin {
      "banner": [Function],
      "options": Object {
        "banner": "APP_VERSION=\\"N/A\\";",
        "entryOnly": true,
        "raw": true,
        "test": /\\\\\\.\\(jsx\\|tsx\\)\\?/,
      },
    },
    BannerPlugin {
      "banner": [Function],
      "options": Object {
        "banner": "vN/A - 2023-03-28T16:07:07.909Z",
      },
    },
    HtmlWebpackPlugin {
      "userOptions": Object {
        "favicon": "../../packages/workflow/public/favicon.ico",
        "template": "../../packages/workflow/public/index.html",
        "title": "Availity",
      },
      "version": 5,
    },
    IgnorePlugin {
      "checkIgnore": [Function],
      "options": Object {
        "contextRegExp": /moment\\$/,
        "resourceRegExp": /\\^\\\\\\.\\\\/locale\\$/,
      },
    },
    CaseSensitivePathsPlugin {
      "fsOperations": 0,
      "logger": NullConsole {
        "Console": [Function],
        "_counters": Object {},
        "_formatBuffer": [Function],
        "_groupDepth": 0,
        "_stderr": Socket {
          "_destroy": [Function],
          "_events": Object {
            "end": [Function],
          },
          "_eventsCount": 1,
          "_hadError": false,
          "_host": null,
          "_isStdio": true,
          "_maxListeners": undefined,
          "_parent": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "_readableState": ReadableState {
            "autoDestroy": false,
            "awaitDrainWriters": null,
            "buffer": BufferList {
              "head": null,
              "length": 0,
              "tail": null,
            },
            "closeEmitted": false,
            "closed": false,
            "dataEmitted": false,
            "decoder": null,
            "defaultEncoding": "utf8",
            "destroyed": false,
            "emitClose": false,
            "emittedReadable": false,
            "encoding": null,
            "endEmitted": false,
            "ended": false,
            "errorEmitted": false,
            "errored": null,
            "flowing": null,
            "highWaterMark": 16384,
            "length": 0,
            "multiAwaitDrain": false,
            "needReadable": false,
            "objectMode": false,
            "pipes": Array [],
            "readable": false,
            "readableListening": false,
            "reading": false,
            "readingMore": false,
            "resumeScheduled": false,
            "sync": true,
            Symbol(kPaused): null,
          },
          "_server": null,
          "_sockname": null,
          "_type": "pipe",
          "_writableState": WritableState {
            "afterWriteTickInfo": null,
            "allBuffers": true,
            "allNoop": true,
            "autoDestroy": false,
            "bufferProcessing": false,
            "buffered": Array [],
            "bufferedIndex": 0,
            "closeEmitted": false,
            "closed": false,
            "corked": 0,
            "decodeStrings": false,
            "defaultEncoding": "utf8",
            "destroyed": false,
            "emitClose": false,
            "ended": false,
            "ending": false,
            "errorEmitted": false,
            "errored": null,
            "finalCalled": false,
            "finished": false,
            "highWaterMark": 16384,
            "length": 0,
            "needDrain": false,
            "objectMode": false,
            "onwrite": [Function],
            "pendingcb": 0,
            "prefinished": false,
            "sync": true,
            "writecb": null,
            "writelen": 0,
            "writing": false,
          },
          "allowHalfOpen": false,
          "connecting": false,
          "destroySoon": [Function],
          "fd": 1,
          "server": null,
          Symbol(async_id_symbol): 9,
          Symbol(kHandle): Pipe {
            Symbol(owner_symbol): [Circular],
          },
          Symbol(kSetNoDelay): false,
          Symbol(lastWriteQueueSize): 0,
          Symbol(timeout): null,
          Symbol(kBuffer): null,
          Symbol(kBufferCb): null,
          Symbol(kBufferGen): null,
          Symbol(kCapture): false,
          Symbol(kBytesRead): 0,
          Symbol(kBytesWritten): 0,
        },
        "_stdout": Socket {
          "_destroy": [Function],
          "_events": Object {
            "end": [Function],
          },
          "_eventsCount": 1,
          "_hadError": false,
          "_host": null,
          "_isStdio": true,
          "_maxListeners": undefined,
          "_parent": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "_readableState": ReadableState {
            "autoDestroy": false,
            "awaitDrainWriters": null,
            "buffer": BufferList {
              "head": null,
              "length": 0,
              "tail": null,
            },
            "closeEmitted": false,
            "closed": false,
            "dataEmitted": false,
            "decoder": null,
            "defaultEncoding": "utf8",
            "destroyed": false,
            "emitClose": false,
            "emittedReadable": false,
            "encoding": null,
            "endEmitted": false,
            "ended": false,
            "errorEmitted": false,
            "errored": null,
            "flowing": null,
            "highWaterMark": 16384,
            "length": 0,
            "multiAwaitDrain": false,
            "needReadable": false,
            "objectMode": false,
            "pipes": Array [],
            "readable": false,
            "readableListening": false,
            "reading": false,
            "readingMore": false,
            "resumeScheduled": false,
            "sync": true,
            Symbol(kPaused): null,
          },
          "_server": null,
          "_sockname": null,
          "_type": "pipe",
          "_writableState": WritableState {
            "afterWriteTickInfo": null,
            "allBuffers": true,
            "allNoop": true,
            "autoDestroy": false,
            "bufferProcessing": false,
            "buffered": Array [],
            "bufferedIndex": 0,
            "closeEmitted": false,
            "closed": false,
            "corked": 0,
            "decodeStrings": false,
            "defaultEncoding": "utf8",
            "destroyed": false,
            "emitClose": false,
            "ended": false,
            "ending": false,
            "errorEmitted": false,
            "errored": null,
            "finalCalled": false,
            "finished": false,
            "highWaterMark": 16384,
            "length": 0,
            "needDrain": false,
            "objectMode": false,
            "onwrite": [Function],
            "pendingcb": 0,
            "prefinished": false,
            "sync": true,
            "writecb": null,
            "writelen": 0,
            "writing": false,
          },
          "allowHalfOpen": false,
          "connecting": false,
          "destroySoon": [Function],
          "fd": 1,
          "server": null,
          Symbol(async_id_symbol): 9,
          Symbol(kHandle): Pipe {
            Symbol(owner_symbol): [Circular],
          },
          Symbol(kSetNoDelay): false,
          Symbol(lastWriteQueueSize): 0,
          Symbol(timeout): null,
          Symbol(kBuffer): null,
          Symbol(kBufferCb): null,
          Symbol(kBufferGen): null,
          Symbol(kCapture): false,
          Symbol(kBytesRead): 0,
          Symbol(kBytesWritten): 0,
        },
        "_timers": Object {},
        "assert": [Function],
        "clear": [Function],
        "count": [Function],
        "countReset": [Function],
        "debug": [Function],
        "dir": [Function],
        "dirxml": [Function],
        "error": [Function],
        "group": [Function],
        "groupCollapsed": [Function],
        "groupEnd": [Function],
        "info": [Function],
        "log": [Function],
        "table": [Function],
        "time": [Function],
        "timeEnd": [Function],
        "timeLog": [Function],
        "trace": [Function],
        "warn": [Function],
      },
      "options": Object {},
      "pathCache": Map {},
      "primed": false,
    },
    MiniCssExtractPlugin {
      "_sortedModulesCache": WeakMap {},
      "options": Object {
        "chunkFilename": "css/[name]-[contenthash:8].chunk.css",
        "experimentalUseImportModule": undefined,
        "filename": "css/[name]-[contenthash:8].chunk.css",
        "ignoreOrder": false,
        "runtime": true,
      },
      "runtimeOptions": Object {
        "attributes": undefined,
        "insert": undefined,
        "linkType": "text/css",
      },
    },
  ],
  "resolve": Object {
    "extensions": Array [
      ".js",
      ".jsx",
      ".ts",
      ".tsx",
      ".json",
      ".css",
      "scss",
    ],
    "fallback": Object {
      "path": "/Users/bnewman/repositories/availity-workflow/node_modules/path-browserify/index.js",
    },
    "modules": Array [
      "/Users/bnewman/repositories/availity-workflow/project/app",
      "node_modules",
      "/Users/bnewman/repositories/availity-workflow/node_modules",
      "/Users/bnewman/repositories/availity-workflow/packages/workflow/node_modules",
    ],
    "symlinks": true,
  },
  "resolveLoader": Object {
    "modules": Array [
      "/Users/bnewman/repositories/availity-workflow/node_modules",
      "/Users/bnewman/repositories/availity-workflow/packages/workflow/node_modules",
    ],
    "symlinks": true,
  },
  "target": "browserslist: defaults",
}
`;

exports[`webpack configs sets up the profile config with default settings 1`] = `
Object {
  "context": "/Users/bnewman/repositories/availity-workflow/project/app",
  "devtool": "source-map",
  "entry": Object {
    "index": Array [
      "/Users/bnewman/repositories/availity-workflow/node_modules/react-app-polyfill/stable.js",
      "/Users/bnewman/repositories/availity-workflow/node_modules/navigator.sendbeacon/dist/navigator.sendbeacon.cjs.js",
      "/Users/bnewman/repositories/availity-workflow/project/app/index.js",
    ],
  },
  "experiments": Object {},
  "infrastructureLogging": Object {
    "level": "warn",
  },
  "mode": "production",
  "module": Object {
    "rules": Array [
      Object {
        "oneOf": Array [
          Object {
            "test": /\\[/\\\\\\\\\\]node_modules\\[/\\\\\\\\\\]vfile\\[/\\\\\\\\\\]core\\\\\\.js/,
            "use": Array [
              Object {
                "loader": "imports-loader",
                "options": Object {
                  "imports": Array [
                    "single process/browser process",
                  ],
                  "type": "commonjs",
                },
              },
            ],
          },
          Object {
            "include": Array [
              "/Users/bnewman/repositories/availity-workflow/project/app",
              /node_modules\\[/\\\\\\\\\\]\\(\\?=\\(@av\\)\\)\\.\\*/,
            ],
            "test": /\\\\\\.\\(js\\|mjs\\|jsx\\|ts\\|tsx\\)\\$/,
            "use": Array [
              Object {
                "loader": "babel-loader",
                "options": Object {
                  "babelrc": false,
                  "cacheCompression": false,
                  "cacheDirectory": true,
                  "presets": Array [
                    [Function],
                  ],
                },
              },
            ],
          },
          Object {
            "exclude": Array [
              "/Users/bnewman/repositories/availity-workflow/project/app",
              /node_modules\\[/\\\\\\\\\\]\\(\\?=\\(@av\\)\\)\\.\\*/,
              /@babel\\(\\?:\\\\/\\|\\\\\\\\\\{1,2\\}\\)runtime/,
            ],
            "loader": "babel-loader",
            "options": Object {
              "babelrc": false,
              "cacheCompression": false,
              "cacheDirectory": true,
              "compact": false,
              "configFile": false,
              "presets": Array [
                Array [
                  "/Users/bnewman/repositories/availity-workflow/node_modules/babel-preset-react-app/dependencies.js",
                  Object {
                    "helpers": true,
                  },
                ],
              ],
            },
            "test": /\\\\\\.\\(js\\|mjs\\)\\$/,
          },
          Object {
            "resolve": Object {
              "fullySpecified": false,
            },
            "test": /\\\\\\.m\\?js/,
          },
          Object {
            "test": /\\\\\\.css\\$/,
            "use": Array [
              Object {
                "loader": "/Users/bnewman/repositories/availity-workflow/node_modules/mini-css-extract-plugin/dist/loader.js",
                "options": Object {
                  "publicPath": "auto",
                },
              },
              Object {
                "loader": "css-loader",
                "options": Object {
                  "importLoaders": 1,
                  "sourceMap": true,
                },
              },
              Object {
                "loader": "postcss-loader",
                "options": Object {
                  "postcssOptions": Object {
                    "plugins": Array [
                      Object {
                        "Rule": [Function],
                        "postcssPlugin": "postcss-focus",
                      },
                      Object {
                        "Once": [Function],
                        "postcssPlugin": "postcss-flexbugs-fixes",
                      },
                      Object {
                        "plugins": Array [
                          Object {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          Object {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          Object {
                            "AtRule": Object {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          Object {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          Object {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          Object {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          Object {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          Object {
                            "browsers": undefined,
                            "info": [Function],
                            "options": Object {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": undefined,
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          Object {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          Object {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                      Object {
                        "OnceExit": [Function],
                        "postcssPlugin": "postcss-reporter",
                      },
                    ],
                  },
                  "sourceMap": true,
                },
              },
            ],
          },
          Object {
            "test": /\\\\\\.\\(scss\\|sass\\)\\$/,
            "use": Array [
              Object {
                "loader": "/Users/bnewman/repositories/availity-workflow/node_modules/mini-css-extract-plugin/dist/loader.js",
                "options": Object {
                  "publicPath": "auto",
                },
              },
              "css-loader",
              Object {
                "loader": "postcss-loader",
                "options": Object {
                  "postcssOptions": Object {
                    "plugins": Array [
                      Object {
                        "Rule": [Function],
                        "postcssPlugin": "postcss-focus",
                      },
                      Object {
                        "Once": [Function],
                        "postcssPlugin": "postcss-flexbugs-fixes",
                      },
                      Object {
                        "plugins": Array [
                          Object {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-unset-value",
                          },
                          Object {
                            "postcssPlugin": "postcss-custom-properties",
                            "prepare": [Function],
                          },
                          Object {
                            "AtRule": Object {
                              "custom-media": [Function],
                              "media": [Function],
                            },
                            "postcssPlugin": "postcss-media-minmax",
                          },
                          Object {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-initial",
                          },
                          Object {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-page-break",
                          },
                          Object {
                            "Once": [Function],
                            "postcssPlugin": "postcss-font-variant",
                          },
                          Object {
                            "Declaration": [Function],
                            "postcssPlugin": "postcss-gap-properties",
                          },
                          Object {
                            "browsers": undefined,
                            "info": [Function],
                            "options": Object {
                              "flexbox": "no-2009",
                              "overrideBrowserslist": undefined,
                            },
                            "postcssPlugin": "autoprefixer",
                            "prepare": [Function],
                          },
                          Object {
                            "RuleExit": [Function],
                            "postcssPlugin": "postcss-progressive-custom-properties",
                          },
                          Object {
                            "OnceExit": [Function],
                            "postcssPlugin": "postcss-preset-env",
                          },
                        ],
                        "postcssPlugin": "postcss-preset-env",
                      },
                      Object {
                        "OnceExit": [Function],
                        "postcssPlugin": "postcss-reporter",
                      },
                    ],
                  },
                  "sourceMap": true,
                },
              },
              Object {
                "loader": "sass-loader",
                "options": Object {
                  "sourceMap": true,
                },
              },
            ],
          },
          Object {
            "generator": Object {
              "filename": "fonts/[name].[ext]",
            },
            "test": /font\\\\\\.\\(woff\\|woff2\\|eot\\|ttf\\|otf\\|svg\\)\\$/i,
            "type": "asset/resource",
          },
          Object {
            "test": /\\\\\\.\\(jpe\\?g\\|png\\|gif\\|svg\\)\\$/i,
            "use": Array [
              "url-loader?name=images/[name].[ext]&limit=10000",
            ],
          },
          Object {
            "exclude": Array [
              /\\\\\\.\\(js\\|mjs\\|jsx\\|ts\\|tsx\\)\\$/,
              /\\\\\\.html\\$/,
              /\\\\\\.json\\$/,
            ],
            "loader": "/Users/bnewman/repositories/availity-workflow/node_modules/file-loader/dist/cjs.js",
            "options": Object {
              "name": "static/media/[name].[contenthash:8].[ext]",
            },
          },
        ],
      },
    ],
  },
  "optimization": Object {
    "minimizer": Array [],
    "moduleIds": "deterministic",
    "runtimeChunk": "single",
    "splitChunks": Object {
      "cacheGroups": Object {
        "default": Object {
          "minChunks": 2,
          "priority": -20,
          "reuseExistingChunk": true,
        },
        "defaultVendors": Object {
          "chunks": "all",
          "idHint": "defaultVendors",
          "priority": -10,
          "test": /\\[/\\\\\\\\\\]node_modules\\[/\\\\\\\\\\]/,
        },
        "lodash": Object {
          "chunks": "all",
          "idHint": "vendors",
          "priority": 1,
          "test": /\\[/\\\\\\\\\\]node_modules\\[/\\\\\\\\\\]\\(lodash\\(\\[\\.-\\]\\)\\?\\\\w\\*\\?\\)\\[/\\\\\\\\\\]/,
        },
        "moment": Object {
          "chunks": "all",
          "idHint": "vendors",
          "priority": 2,
          "test": /\\[/\\\\\\\\\\]node_modules\\[/\\\\\\\\\\]\\(moment\\)\\[/\\\\\\\\\\]/,
        },
        "react": Object {
          "chunks": "all",
          "idHint": "vendors",
          "priority": 10,
          "test": /\\[/\\\\\\\\\\]node_modules\\[/\\\\\\\\\\]\\(react\\|react-dom\\)\\[/\\\\\\\\\\]/,
        },
        "styles": Object {
          "chunks": "all",
          "enforce": true,
          "idHint": "styles",
          "test": /\\\\\\.css\\$/,
        },
      },
    },
  },
  "output": Object {
    "chunkFilename": "[name].chunk.js",
    "devtoolModuleFilenameTemplate": [Function],
    "filename": "[name].js",
    "path": "/Users/bnewman/repositories/availity-workflow/build",
  },
  "plugins": Array [
    DefinePlugin {
      "definitions": Object {
        "__DEV__": false,
        "__PROD__": false,
        "__STAGING__": false,
        "__TEST__": true,
        "process.env.NODE_ENV": "\\"test\\"",
      },
    },
    BannerPlugin {
      "banner": [Function],
      "options": Object {
        "banner": "APP_VERSION=\\"N/A\\";",
        "entryOnly": true,
        "raw": true,
        "test": /\\\\\\.\\(jsx\\|tsx\\)\\?/,
      },
    },
    BannerPlugin {
      "banner": [Function],
      "options": Object {
        "banner": "vN/A - 2023-03-28T16:07:07.909Z",
      },
    },
    HtmlWebpackPlugin {
      "userOptions": Object {
        "favicon": "../../packages/workflow/public/favicon.ico",
        "template": "../../packages/workflow/public/index.html",
        "title": "Availity",
      },
      "version": 5,
    },
    IgnorePlugin {
      "checkIgnore": [Function],
      "options": Object {
        "contextRegExp": /moment\\$/,
        "resourceRegExp": /\\^\\\\\\.\\\\/locale\\$/,
      },
    },
    CaseSensitivePathsPlugin {
      "fsOperations": 0,
      "logger": NullConsole {
        "Console": [Function],
        "_counters": Object {},
        "_formatBuffer": [Function],
        "_groupDepth": 0,
        "_stderr": Socket {
          "_destroy": [Function],
          "_events": Object {
            "end": [Function],
          },
          "_eventsCount": 1,
          "_hadError": false,
          "_host": null,
          "_isStdio": true,
          "_maxListeners": undefined,
          "_parent": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "_readableState": ReadableState {
            "autoDestroy": false,
            "awaitDrainWriters": null,
            "buffer": BufferList {
              "head": null,
              "length": 0,
              "tail": null,
            },
            "closeEmitted": false,
            "closed": false,
            "dataEmitted": false,
            "decoder": null,
            "defaultEncoding": "utf8",
            "destroyed": false,
            "emitClose": false,
            "emittedReadable": false,
            "encoding": null,
            "endEmitted": false,
            "ended": false,
            "errorEmitted": false,
            "errored": null,
            "flowing": null,
            "highWaterMark": 16384,
            "length": 0,
            "multiAwaitDrain": false,
            "needReadable": false,
            "objectMode": false,
            "pipes": Array [],
            "readable": false,
            "readableListening": false,
            "reading": false,
            "readingMore": false,
            "resumeScheduled": false,
            "sync": true,
            Symbol(kPaused): null,
          },
          "_server": null,
          "_sockname": null,
          "_type": "pipe",
          "_writableState": WritableState {
            "afterWriteTickInfo": null,
            "allBuffers": true,
            "allNoop": true,
            "autoDestroy": false,
            "bufferProcessing": false,
            "buffered": Array [],
            "bufferedIndex": 0,
            "closeEmitted": false,
            "closed": false,
            "corked": 0,
            "decodeStrings": false,
            "defaultEncoding": "utf8",
            "destroyed": false,
            "emitClose": false,
            "ended": false,
            "ending": false,
            "errorEmitted": false,
            "errored": null,
            "finalCalled": false,
            "finished": false,
            "highWaterMark": 16384,
            "length": 0,
            "needDrain": false,
            "objectMode": false,
            "onwrite": [Function],
            "pendingcb": 0,
            "prefinished": false,
            "sync": true,
            "writecb": null,
            "writelen": 0,
            "writing": false,
          },
          "allowHalfOpen": false,
          "connecting": false,
          "destroySoon": [Function],
          "fd": 1,
          "server": null,
          Symbol(async_id_symbol): 9,
          Symbol(kHandle): Pipe {
            Symbol(owner_symbol): [Circular],
          },
          Symbol(kSetNoDelay): false,
          Symbol(lastWriteQueueSize): 0,
          Symbol(timeout): null,
          Symbol(kBuffer): null,
          Symbol(kBufferCb): null,
          Symbol(kBufferGen): null,
          Symbol(kCapture): false,
          Symbol(kBytesRead): 0,
          Symbol(kBytesWritten): 0,
        },
        "_stdout": Socket {
          "_destroy": [Function],
          "_events": Object {
            "end": [Function],
          },
          "_eventsCount": 1,
          "_hadError": false,
          "_host": null,
          "_isStdio": true,
          "_maxListeners": undefined,
          "_parent": null,
          "_pendingData": null,
          "_pendingEncoding": "",
          "_readableState": ReadableState {
            "autoDestroy": false,
            "awaitDrainWriters": null,
            "buffer": BufferList {
              "head": null,
              "length": 0,
              "tail": null,
            },
            "closeEmitted": false,
            "closed": false,
            "dataEmitted": false,
            "decoder": null,
            "defaultEncoding": "utf8",
            "destroyed": false,
            "emitClose": false,
            "emittedReadable": false,
            "encoding": null,
            "endEmitted": false,
            "ended": false,
            "errorEmitted": false,
            "errored": null,
            "flowing": null,
            "highWaterMark": 16384,
            "length": 0,
            "multiAwaitDrain": false,
            "needReadable": false,
            "objectMode": false,
            "pipes": Array [],
            "readable": false,
            "readableListening": false,
            "reading": false,
            "readingMore": false,
            "resumeScheduled": false,
            "sync": true,
            Symbol(kPaused): null,
          },
          "_server": null,
          "_sockname": null,
          "_type": "pipe",
          "_writableState": WritableState {
            "afterWriteTickInfo": null,
            "allBuffers": true,
            "allNoop": true,
            "autoDestroy": false,
            "bufferProcessing": false,
            "buffered": Array [],
            "bufferedIndex": 0,
            "closeEmitted": false,
            "closed": false,
            "corked": 0,
            "decodeStrings": false,
            "defaultEncoding": "utf8",
            "destroyed": false,
            "emitClose": false,
            "ended": false,
            "ending": false,
            "errorEmitted": false,
            "errored": null,
            "finalCalled": false,
            "finished": false,
            "highWaterMark": 16384,
            "length": 0,
            "needDrain": false,
            "objectMode": false,
            "onwrite": [Function],
            "pendingcb": 0,
            "prefinished": false,
            "sync": true,
            "writecb": null,
            "writelen": 0,
            "writing": false,
          },
          "allowHalfOpen": false,
          "connecting": false,
          "destroySoon": [Function],
          "fd": 1,
          "server": null,
          Symbol(async_id_symbol): 9,
          Symbol(kHandle): Pipe {
            Symbol(owner_symbol): [Circular],
          },
          Symbol(kSetNoDelay): false,
          Symbol(lastWriteQueueSize): 0,
          Symbol(timeout): null,
          Symbol(kBuffer): null,
          Symbol(kBufferCb): null,
          Symbol(kBufferGen): null,
          Symbol(kCapture): false,
          Symbol(kBytesRead): 0,
          Symbol(kBytesWritten): 0,
        },
        "_timers": Object {},
        "assert": [Function],
        "clear": [Function],
        "count": [Function],
        "countReset": [Function],
        "debug": [Function],
        "dir": [Function],
        "dirxml": [Function],
        "error": [Function],
        "group": [Function],
        "groupCollapsed": [Function],
        "groupEnd": [Function],
        "info": [Function],
        "log": [Function],
        "table": [Function],
        "time": [Function],
        "timeEnd": [Function],
        "timeLog": [Function],
        "trace": [Function],
        "warn": [Function],
      },
      "options": Object {},
      "pathCache": Map {},
      "primed": false,
    },
    MiniCssExtractPlugin {
      "_sortedModulesCache": WeakMap {},
      "options": Object {
        "chunkFilename": "css/[name]-[contenthash:8].chunk.css",
        "experimentalUseImportModule": undefined,
        "filename": "css/[name]-[contenthash:8].chunk.css",
        "ignoreOrder": false,
        "runtime": true,
      },
      "runtimeOptions": Object {
        "attributes": undefined,
        "insert": undefined,
        "linkType": "text/css",
      },
    },
    BundleAnalyzerPlugin {
      "logger": Logger {
        "activeLevels": Set {
          "info",
          "warn",
          "error",
          "silent",
        },
      },
      "opts": Object {
        "analyzerHost": "127.0.0.1",
        "analyzerMode": "static",
        "analyzerPort": 8888,
        "analyzerUrl": [Function],
        "defaultSizes": "parsed",
        "excludeAssets": null,
        "generateStatsFile": false,
        "logLevel": "info",
        "openAnalyzer": true,
        "reportFilename": "profile.html",
        "reportTitle": [Function],
        "startAnalyzer": true,
        "statsFilename": "stats.json",
        "statsOptions": null,
      },
      "server": null,
    },
    DuplicatePackageCheckerPlugin {
      "options": Object {
        "emitError": false,
        "exclude": [Function],
        "showHelp": true,
        "strict": true,
        "verbose": false,
      },
    },
  ],
  "resolve": Object {
    "extensions": Array [
      ".js",
      ".jsx",
      ".ts",
      ".tsx",
      ".json",
      ".css",
      "scss",
    ],
    "fallback": Object {
      "path": "/Users/bnewman/repositories/availity-workflow/node_modules/path-browserify/index.js",
    },
    "modules": Array [
      "/Users/bnewman/repositories/availity-workflow/project/app",
      "node_modules",
      "/Users/bnewman/repositories/availity-workflow/node_modules",
      "/Users/bnewman/repositories/availity-workflow/packages/workflow/node_modules",
    ],
    "symlinks": true,
  },
  "resolveLoader": Object {
    "modules": Array [
      "/Users/bnewman/repositories/availity-workflow/node_modules",
      "/Users/bnewman/repositories/availity-workflow/packages/workflow/node_modules",
    ],
    "symlinks": true,
  },
  "target": "browserslist: defaults",
}
`;
